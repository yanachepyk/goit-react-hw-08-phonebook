{"version":3,"file":"static/js/990.3a91bfc9.chunk.js","mappings":"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","sources":["components/Shared.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Section/Section.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  font-size: 18px;\n  width: 30%;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  font-size: 16px;\n  border: 2px solid #3b4961;\n  border-radius: 5px;\n`;\n\nexport const ContactEl = styled.li`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n  align-items: center;\n`;\n\nexport const Contacts = styled.ul`\n  width: 30%;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 30%;\n`;\n\nexport const Field = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const PrimaryButton = styled.button`\n  align-self: center;\n  font-weight: 600;\n  padding: 5px 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #d9c4b3;\n  color: #3b4961;\n  font-size: 16px;\n  box-shadow: 5px 5px 10px 2px rgba(59, 73, 97, 0.8);\n  text-transform: capitalize;\n\n  &:hover,\n  &:focus {\n    background-color: #c2ad9d;\n  }\n`;","import { useState } from 'react';\nimport { Field, Form, Input, PrimaryButton } from '../Shared.styled';\nimport { addContact } from 'redux/contactSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts.items);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const isExist = contacts.some(contact => contact.name === name);\n\n    if (isExist) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name: name, number: number }));\n      setName('');\n      setNumber('');\n    }\n  };\n\n  const handleNameChange = event => {\n    setName(event.target.value);\n  };\n  const handleNumberChange = event => {\n    setNumber(event.target.value);\n  };\n\n  return (\n    <Form onSubmit={handleFormSubmit}>\n      <Field>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleNameChange}\n          value={name}\n        />\n      </Field>\n      <Field>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleNumberChange}\n          value={number}\n        />\n      </Field>\n      <PrimaryButton type=\"submit\">Add contact</PrimaryButton>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import { ContactEl, PrimaryButton } from 'components/Shared.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactSlice';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ContactEl>\n      {name}: {number} \n      <PrimaryButton type=\"button\" onClick={() => handleDelete(id)}>\n        Delete\n      </PrimaryButton>\n    </ContactEl>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default ContactItem;\n","import { Contacts } from 'components/Shared.styled';\nimport ContactItem from './ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contactSlice';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n  const filteredContacts = contacts.filter(contact => \n    contact.name && contact.name.toLowerCase().includes(filter)\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch])\n\n  return (\n    <Contacts>\n      {filteredContacts.map(contact => (\n        <ContactItem\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n        />\n      ))}\n    </Contacts>\n  );\n};\n\nexport default ContactList;\n","import { Input, Label } from 'components/Shared.styled';\nimport { useDispatch } from 'react-redux';\nimport { setContactsFilter } from 'redux/contactSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilter = event => {\n    dispatch(setContactsFilter(event.target.value.toLowerCase()));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" onChange={handleFilter} />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.any,\n};\n\nexport default Section;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Section from 'components/Section/Section';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Label","styled","Input","ContactEl","Contacts","Form","Field","PrimaryButton","dispatch","useDispatch","contacts","useSelector","state","items","useState","name","setName","number","setNumber","onSubmit","event","preventDefault","some","contact","alert","addContact","type","pattern","title","required","onChange","target","value","id","onClick","deleteContact","handleDelete","filter","filteredContacts","toLowerCase","includes","useEffect","fetchContacts","map","setContactsFilter","children"],"sourceRoot":""}